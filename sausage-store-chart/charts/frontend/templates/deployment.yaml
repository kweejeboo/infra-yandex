---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.frontend.spec.replicas }}
  revisionHistoryLimit: {{ .Values.frontend.spec.revisionHistoryLimit }}
  # Стратегия развёртывания. Recreate — удалит сначала все старые Pod'ы 
  # Есть и более гибкая стратегии, например, RollingUpdate, которая будет обновлять Pod'ы порциями  
  strategy:
    type: {{ .Values.frontend.spec.strategy.type }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.frontend.spec.affinity.key }}
                operator: {{ .Values.frontend.spec.affinity.operator }}
                values:
                - {{ .Chart.Name }}
                
      containers:
      - image: "{{ .Values.frontend.image }}:{{ .Chart.AppVersion }}"
        name: {{ .Chart.Name }}
        imagePullPolicy: {{ .Values.frontend.imagePullPolicy}}
        ports:
        - containerPort: {{ .Values.frontend.ports.containerPort }}
        env:
          - name: {{ .Values.frontend.env.defHost }}
            value: {{ .Values.backend.appName }}
        volumeMounts:
        - name: {{ .Values.frontend.volumes.name }}
          mountPath: {{ .Values.frontend.volumes.mountPath }}
          
      volumes:
        - name: {{ .Values.frontend.volumes.name }}
          configMap:
            name: {{ .Values.frontend.volumes.name }}
            items:
              - key: {{ .Values.frontend.volumes.configMap.items.key }}
                path: {{ .Values.frontend.volumes.configMap.items.path }}
      imagePullSecrets:
      - name: {{ .Values.frontend.imagePullSecrets.name }}
