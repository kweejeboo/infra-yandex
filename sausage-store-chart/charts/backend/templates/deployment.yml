---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.appName }}
  labels:
    app: {{ .Values.backend.appName }}
spec:
  replicas: {{ .Values.backend.spec.replicas }}
  revisionHistoryLimit: {{ .Values.backend.spec.revisionHistoryLimit }}
  # Стратегия развёртывания. Recreate — удалит сначала все старые Pod'ы 
  # Есть и более гибкая стратегии, например, RollingUpdate, которая будет обновлять Pod'ы порциями  
  strategy:
    type: {{ .Values.backend.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.backend.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.backend.strategy.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: {{ .Values.backend.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.appName }}
    spec:
      containers:
        - name: {{ .Values.backend.appName }}
          image: "{{ .Values.backend.image}}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.appName }}
          env:
            - name: {{ .Values.backend.env.virtual_host }}
              value: {{ .Values.backend.appName }}
            - name: {{ .Values.backend.env.spring_url }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.appName }}
                  key: db
            - name: {{ .Values.backend.env.spring_username }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.appName }}
                  key: db_username
            - name: {{ .Values.backend.env.spring_password }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.appName }}
                  key: db_password
            - name: {{ .Values.backend.env.mongo_uri }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.appName }}
                  key: db_mongo
          ports:
            - name: {{ .Values.backend.appName }}
              containerPort: {{ .Values.backend.port}}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.livenessProbe.path}}
              port: {{ .Values.backend.port}}
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds}}
            timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds}} 
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold}}
      imagePullSecrets:
        - name: {{ .Values.backend.imagePullSecrets.name }}
